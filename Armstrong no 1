Write a program to check whether the given number is an Armstrong number or not. Armstrong Number:abcd... = pow(a,n) + pow(b,n) + pow(c,n) + pow(d,n) + .... where n represents the number of digits

Input Format

Read a no

Constraints

1<=n<=10^7

Output Format

Print "Yes" if armstrong no else print "No"

Sample Input 0

153
Sample Output 0

Yes
Sample Input 1

120
Sample Output 1

No
Sample Input 2

1253
Sample Output 2

No
Sample Input 3

1634
Sample Output 3

Yes


#include <stdio.h>
#include <math.h>

int isArmstrong(int number) {
    int originalNumber = number;
    int numDigits = 0;
    int sum = 0;
    
    // Calculate the number of digits
    while (originalNumber != 0) {
        originalNumber /= 10;
        numDigits++;
    }
    
    originalNumber = number; // Reset originalNumber to the input number
    
    // Calculate sum of nth power of digits
    while (originalNumber != 0) {
        int digit = originalNumber % 10;
        sum += pow(digit, numDigits);
        originalNumber /= 10;
    }
    
    // Check if number is Armstrong
    if (sum == number) {
        return 1; // true
    } else {
        return 0; // false
    }
}

int main() {
    int number;
    scanf("%d", &number);
    
    if (isArmstrong(number)) {
        printf("Yes\n");
    } else {
        printf("No\n");
    }
    
    return 0;
}
